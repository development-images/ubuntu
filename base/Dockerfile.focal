## Base on Ubuntu Focal
FROM ubuntu:focal

## Set maintainer label
LABEL maintainer="Chris <git@gbe0.com>"

## Configure the default apt mirror for package installations
ARG APT_MIRROR="http://archive.ubuntu.com/ubuntu/"

## Configure default user ID and group ID that will be used for VS Code
ARG UID=1000
ARG GID=$UID

## Configure LANG, LC_ALL and LANGUAGE environment vars to prevent various errors
ENV LANG="C.UTF-8" LC_ALL="C.UTF-8" LANGUAGE="C.UTF-8"

## Update sources list and run system upgrade
RUN echo \
      ### Update current sources list and install lsb_release and gpg utility
      && apt-get update \
      && DEBIAN_FRONTEND="noninteractive" apt-get -q -y install \
        lsb-release gpgv \
      ### Configure package sources list
      && echo "deb ${APT_MIRROR} $(lsb_release -sc) main restricted" > /etc/apt/sources.list \
      && echo "deb ${APT_MIRROR} $(lsb_release -sc)-updates main restricted" >> /etc/apt/sources.list \
      && echo "deb ${APT_MIRROR} $(lsb_release -sc) universe" >> /etc/apt/sources.list \
      && echo "deb ${APT_MIRROR} $(lsb_release -sc)-updates universe" >> /etc/apt/sources.list \
      && echo "deb ${APT_MIRROR} $(lsb_release -sc) multiverse" >> /etc/apt/sources.list \
      && echo "deb ${APT_MIRROR} $(lsb_release -sc)-updates multiverse" >> /etc/apt/sources.list \
      && echo "deb ${APT_MIRROR} $(lsb_release -sc)-backports main restricted universe multiverse" >> /etc/apt/sources.list \
      && echo "deb ${APT_MIRROR} $(lsb_release -sc)-proposed main restricted universe multiverse" >> /etc/apt/sources.list \
      && echo "deb http://archive.canonical.com/ubuntu $(lsb_release -sc) partner" >> /etc/apt/sources.list \
      && echo "deb http://security.ubuntu.com/ubuntu/ $(lsb_release -sc)-security main restricted" >> /etc/apt/sources.list \
      && echo "deb http://security.ubuntu.com/ubuntu/ $(lsb_release -sc)-security universe" >> /etc/apt/sources.list \
      && echo "deb http://security.ubuntu.com/ubuntu/ $(lsb_release -sc)-security multiverse" >> /etc/apt/sources.list \
      ### To add source package lists, uncomment the below lines
      # && echo "deb-src ${APT_MIRROR} $(lsb_release -sc) main restricted" >> /etc/apt/sources.list \
      # && echo "deb-src ${APT_MIRROR} $(lsb_release -sc)-updates main restricted" >> /etc/apt/sources.list \
      # && echo "deb-src ${APT_MIRROR} $(lsb_release -sc) universe" >> /etc/apt/sources.list \
      # && echo "deb-src ${APT_MIRROR} $(lsb_release -sc)-updates universe" >> /etc/apt/sources.list \
      # && echo "deb-src ${APT_MIRROR} $(lsb_release -sc) multiverse" >> /etc/apt/sources.list \
      # && echo "deb-src ${APT_MIRROR} $(lsb_release -sc)-updates multiverse" >> /etc/apt/sources.list \
      # && echo "deb-src ${APT_MIRROR} $(lsb_release -sc)-backports main restricted universe multiverse" >> /etc/apt/sources.list \
      # && echo "deb-src ${APT_MIRROR} $(lsb_release -sc)-proposed main restricted universe multiverse" >> /etc/apt/sources.list \
      # && echo "deb-src http://archive.canonical.com/ubuntu $(lsb_release -sc) partner" >> /etc/apt/sources.list \
      # && echo "deb-src http://security.ubuntu.com/ubuntu/ $(lsb_release -sc)-security main restricted" >> /etc/apt/sources.list \
      # && echo "deb-src http://security.ubuntu.com/ubuntu/ $(lsb_release -sc)-security universe" >> /etc/apt/sources.list \
      # && echo "deb-src http://security.ubuntu.com/ubuntu/ $(lsb_release -sc)-security multiverse" >> /etc/apt/sources.list \
      ### Update package cache
      && apt-get update \
      ### Configure apt to retry downloads if there is a failure
      && echo 'APT::Acquire::Retries "3";' > /etc/apt/apt.conf.d/80-retries \
      ### Perform full system upgrade
      && DEBIAN_FRONTEND="noninteractive" apt-get -q -y dist-upgrade

## Install development related tools
RUN echo \
      ### Install useful command line utilities
      && apt-get update \
      && DEBIAN_FRONTEND="noninteractive" apt-get -q -y install \
        vim neovim less strace curl wget screen telnet git tmux dnsutils net-tools \
        iputils-ping bash-completion sudo tcptraceroute \
      ### Install zsh
      && DEBIAN_FRONTEND="noninteractive" apt-get -q -y install \
        zsh zsh-syntax-highlighting \
      ### Create nvim config directory
      && mkdir -p /root/.config/nvim

## Add editor configuration files
COPY vimrc /root/.vimrc
COPY neovimrc /root/.config/nvim/init.vim

## Configure the user that VS Code will run as
RUN echo \
      ### Add user and group
      && groupadd --gid ${GID} vscode \
      && useradd --uid ${UID} --gid ${GID} -s /bin/zsh -m vscode \
      ### Create directories for extensions that are installed by VS Code
      && mkdir -p /home/vscode/.vscode-server /home/vscode/.vscode-server-insiders \
      ### Copy vim config from root user
      && cp /root/.vimrc /home/vscode/.vimrc \
      ### Copy neovim config from root user
      && cp -R /root/.config /home/vscode/.config \
      ### Fix permissions on home directory
      && chown -R ${UID}:${GID} /home/vscode \
      ### Add sudo configuration to allow no password access for vscode user
      && echo vscode ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/vscode \
      && chmod 0440 /etc/sudoers.d/vscode \
      ### Add work around for error with sudo 1.8.31
      ### https://github.com/sudo-project/sudo/issues/42
      ### Without this fix, every sudo command gives this error:
      ###   sudo: setrlimit(RLIMIT_CORE): Operation not permitted
      && echo "Set disable_coredump false" >> /etc/sudo.conf

## Switch to the VS Code user
USER vscode

## Set env variable to make git easier to work with when using SSH
ENV GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

## Install oh-my-zsh
RUN echo \
      && bash -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

## Add the zsh configuration file
COPY .zshrc /home/vscode/.zshrc

## Add the tmux configuration file
COPY .tmux.conf /home/vscode/.tmux.conf

## Add the SSH config
RUN mkdir /home/vscode/.ssh
COPY .ssh_config /home/vscode/.ssh/config

## Fix zshrc permissions
RUN sudo chown vscode:vscode /home/vscode/.zshrc

## Update $PATH to work with locally installed binaries
ENV PATH="/home/vscode/.local/bin:${PATH}"

## Set the work directory
WORKDIR /code