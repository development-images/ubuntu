# Define stages
stages:
  ## Base container
  - build-base
  ## First level containers
  - build-first
  ## Second level containers
  - build-second

# Build base image
build-base:
  image: docker:latest
  stage: build-base
  services:
    - docker:dind
  rules:
    - changes:
      - base/**
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  variables:
    DOCKER_PATH: "./base/"
    IMAGE_TAG: "${CI_REGISTRY_IMAGE}/base"
  script:
    - docker build -t "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "$DOCKER_PATH"
    - docker tag "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "${IMAGE_TAG}:latest"
    - docker push "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}"
    - docker push "${IMAGE_TAG}:latest"

# Build Python image
build-python:
  image: docker:latest
  stage: build-first
  services:
    - docker:dind
  needs:
    - build-base
  rules:
    - changes:
      - base/**
      - python/**
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  variables:
    DOCKER_PATH: "./python/"
    IMAGE_TAG: "${CI_REGISTRY_IMAGE}/python"
  script:
    - docker build -t "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "$DOCKER_PATH"
    - docker tag "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "${IMAGE_TAG}:latest"
    - docker push "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}"
    - docker push "${IMAGE_TAG}:latest"

# Build Ansible image
build-ansible:
  image: docker:latest
  stage: build-first
  services:
    - docker:dind
  needs:
    - build-base
  rules:
    - changes:
      - base/**
      - ansible/**
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  variables:
    DOCKER_PATH: "./ansible/"
    IMAGE_TAG: "${CI_REGISTRY_IMAGE}/ansible"
  script:
    - docker build -t "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "$DOCKER_PATH"
    - docker tag "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "${IMAGE_TAG}:latest"
    - docker push "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}"
    - docker push "${IMAGE_TAG}:latest"

# Build Puppet image
build-puppet:
  image: docker:latest
  stage: build-first
  services:
    - docker:dind
  needs:
    - build-base
  rules:
    - changes:
      - base/**
      - puppet/**
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  variables:
    DOCKER_PATH: "./puppet/"
    IMAGE_TAG: "${CI_REGISTRY_IMAGE}/puppet"
  script:
    - docker build -t "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "$DOCKER_PATH"
    - docker tag "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "${IMAGE_TAG}:latest"
    - docker push "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}"
    - docker push "${IMAGE_TAG}:latest"

# Build Django image
build-django:
  image: docker:latest
  stage: build-second
  services:
    - docker:dind
  needs:
    - build-python
  rules:
    - changes:
      - django/**
      - puppet/**
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  variables:
    DOCKER_PATH: "./django/"
    IMAGE_TAG: "${CI_REGISTRY_IMAGE}/django"
  script:
    - docker build -t "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "$DOCKER_PATH"
    - docker tag "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}" "${IMAGE_TAG}:latest"
    - docker push "${IMAGE_TAG}:${CI_COMMIT_SHORT_SHA}"
    - docker push "${IMAGE_TAG}:latest"